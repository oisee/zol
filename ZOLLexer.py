# Generated from ZOL.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2I")
        buf.write("\u01b2\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\3\2\3\2\3\2\3\2\3\3\3")
        buf.write("\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r")
        buf.write("\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3")
        buf.write("\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3$")
        buf.write("\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+")
        buf.write("\3+\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3\60")
        buf.write("\3\60\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67")
        buf.write("\38\38\39\39\3:\3:\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3>\3")
        buf.write("?\3?\3?\3@\3@\3@\3A\3A\7A\u0153\nA\fA\16A\u0156\13A\3")
        buf.write("B\6B\u0159\nB\rB\16B\u015a\3B\3B\3B\3B\6B\u0161\nB\rB")
        buf.write("\16B\u0162\3B\3B\3B\3B\6B\u0169\nB\rB\16B\u016a\5B\u016d")
        buf.write("\nB\3C\6C\u0170\nC\rC\16C\u0171\3C\3C\6C\u0176\nC\rC\16")
        buf.write("C\u0177\3D\3D\3D\3D\3D\3D\3D\3D\3D\5D\u0183\nD\3E\6E\u0186")
        buf.write("\nE\rE\16E\u0187\3E\3E\3F\3F\3F\3F\7F\u0190\nF\fF\16F")
        buf.write("\u0193\13F\3F\3F\3F\3F\3G\3G\3G\3G\7G\u019d\nG\fG\16G")
        buf.write("\u01a0\13G\3G\3G\3G\3G\3G\3H\3H\3H\7H\u01aa\nH\fH\16H")
        buf.write("\u01ad\13H\3H\3H\3H\3H\5\u0191\u019e\u01ab\2I\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}")
        buf.write("@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008d")
        buf.write("H\u008fI\3\2\b\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\3\2\62")
        buf.write("\63\5\2\62;CHch\5\2\13\f\17\17\"\"\2\u01be\2\3\3\2\2\2")
        buf.write("\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r")
        buf.write("\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3")
        buf.write("\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2")
        buf.write("\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'")
        buf.write("\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2")
        buf.write("\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29")
        buf.write("\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2")
        buf.write("C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2")
        buf.write("\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2")
        buf.write("\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2")
        buf.write("\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3")
        buf.write("\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s")
        buf.write("\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2")
        buf.write("}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2")
        buf.write("\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b")
        buf.write("\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\3\u0091\3\2\2")
        buf.write("\2\5\u0095\3\2\2\2\7\u0097\3\2\2\2\t\u0099\3\2\2\2\13")
        buf.write("\u009c\3\2\2\2\r\u009e\3\2\2\2\17\u00a0\3\2\2\2\21\u00a3")
        buf.write("\3\2\2\2\23\u00aa\3\2\2\2\25\u00ac\3\2\2\2\27\u00ae\3")
        buf.write("\2\2\2\31\u00b0\3\2\2\2\33\u00b5\3\2\2\2\35\u00b7\3\2")
        buf.write("\2\2\37\u00ba\3\2\2\2!\u00bf\3\2\2\2#\u00c5\3\2\2\2%\u00cc")
        buf.write("\3\2\2\2\'\u00d0\3\2\2\2)\u00d6\3\2\2\2+\u00d8\3\2\2\2")
        buf.write("-\u00db\3\2\2\2/\u00e2\3\2\2\2\61\u00e6\3\2\2\2\63\u00e8")
        buf.write("\3\2\2\2\65\u00ea\3\2\2\2\67\u00ec\3\2\2\29\u00ee\3\2")
        buf.write("\2\2;\u00f0\3\2\2\2=\u00f3\3\2\2\2?\u00f6\3\2\2\2A\u00f8")
        buf.write("\3\2\2\2C\u00fa\3\2\2\2E\u00fc\3\2\2\2G\u00ff\3\2\2\2")
        buf.write("I\u0102\3\2\2\2K\u0104\3\2\2\2M\u0107\3\2\2\2O\u0109\3")
        buf.write("\2\2\2Q\u010c\3\2\2\2S\u010f\3\2\2\2U\u0112\3\2\2\2W\u0114")
        buf.write("\3\2\2\2Y\u0116\3\2\2\2[\u0119\3\2\2\2]\u011c\3\2\2\2")
        buf.write("_\u0120\3\2\2\2a\u0124\3\2\2\2c\u0129\3\2\2\2e\u012f\3")
        buf.write("\2\2\2g\u0131\3\2\2\2i\u0133\3\2\2\2k\u0135\3\2\2\2m\u0137")
        buf.write("\3\2\2\2o\u0139\3\2\2\2q\u013b\3\2\2\2s\u013d\3\2\2\2")
        buf.write("u\u013f\3\2\2\2w\u0141\3\2\2\2y\u0144\3\2\2\2{\u0147\3")
        buf.write("\2\2\2}\u014a\3\2\2\2\177\u014d\3\2\2\2\u0081\u0150\3")
        buf.write("\2\2\2\u0083\u016c\3\2\2\2\u0085\u016f\3\2\2\2\u0087\u0182")
        buf.write("\3\2\2\2\u0089\u0185\3\2\2\2\u008b\u018b\3\2\2\2\u008d")
        buf.write("\u0198\3\2\2\2\u008f\u01a6\3\2\2\2\u0091\u0092\7h\2\2")
        buf.write("\u0092\u0093\7w\2\2\u0093\u0094\7p\2\2\u0094\4\3\2\2\2")
        buf.write("\u0095\u0096\7*\2\2\u0096\6\3\2\2\2\u0097\u0098\7+\2\2")
        buf.write("\u0098\b\3\2\2\2\u0099\u009a\7/\2\2\u009a\u009b\7@\2\2")
        buf.write("\u009b\n\3\2\2\2\u009c\u009d\7.\2\2\u009d\f\3\2\2\2\u009e")
        buf.write("\u009f\7<\2\2\u009f\16\3\2\2\2\u00a0\u00a1\7k\2\2\u00a1")
        buf.write("\u00a2\7p\2\2\u00a2\20\3\2\2\2\u00a3\u00a4\7u\2\2\u00a4")
        buf.write("\u00a5\7v\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7w\2\2\u00a7")
        buf.write("\u00a8\7e\2\2\u00a8\u00a9\7v\2\2\u00a9\22\3\2\2\2\u00aa")
        buf.write("\u00ab\7}\2\2\u00ab\24\3\2\2\2\u00ac\u00ad\7=\2\2\u00ad")
        buf.write("\26\3\2\2\2\u00ae\u00af\7\177\2\2\u00af\30\3\2\2\2\u00b0")
        buf.write("\u00b1\7g\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7w\2\2\u00b3")
        buf.write("\u00b4\7o\2\2\u00b4\32\3\2\2\2\u00b5\u00b6\7?\2\2\u00b6")
        buf.write("\34\3\2\2\2\u00b7\u00b8\7k\2\2\u00b8\u00b9\7h\2\2\u00b9")
        buf.write("\36\3\2\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7n\2\2\u00bc")
        buf.write("\u00bd\7u\2\2\u00bd\u00be\7g\2\2\u00be \3\2\2\2\u00bf")
        buf.write("\u00c0\7y\2\2\u00c0\u00c1\7j\2\2\u00c1\u00c2\7k\2\2\u00c2")
        buf.write("\u00c3\7n\2\2\u00c3\u00c4\7g\2\2\u00c4\"\3\2\2\2\u00c5")
        buf.write("\u00c6\7t\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8\7r\2\2\u00c8")
        buf.write("\u00c9\7g\2\2\u00c9\u00ca\7c\2\2\u00ca\u00cb\7v\2\2\u00cb")
        buf.write("$\3\2\2\2\u00cc\u00cd\7h\2\2\u00cd\u00ce\7q\2\2\u00ce")
        buf.write("\u00cf\7t\2\2\u00cf&\3\2\2\2\u00d0\u00d1\7o\2\2\u00d1")
        buf.write("\u00d2\7c\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7e\2\2\u00d4")
        buf.write("\u00d5\7j\2\2\u00d5(\3\2\2\2\u00d6\u00d7\7a\2\2\u00d7")
        buf.write("*\3\2\2\2\u00d8\u00d9\7?\2\2\u00d9\u00da\7@\2\2\u00da")
        buf.write(",\3\2\2\2\u00db\u00dc\7t\2\2\u00dc\u00dd\7g\2\2\u00dd")
        buf.write("\u00de\7v\2\2\u00de\u00df\7w\2\2\u00df\u00e0\7t\2\2\u00e0")
        buf.write("\u00e1\7p\2\2\u00e1.\3\2\2\2\u00e2\u00e3\7c\2\2\u00e3")
        buf.write("\u00e4\7u\2\2\u00e4\u00e5\7o\2\2\u00e5\60\3\2\2\2\u00e6")
        buf.write("\u00e7\7,\2\2\u00e7\62\3\2\2\2\u00e8\u00e9\7\61\2\2\u00e9")
        buf.write("\64\3\2\2\2\u00ea\u00eb\7\'\2\2\u00eb\66\3\2\2\2\u00ec")
        buf.write("\u00ed\7-\2\2\u00ed8\3\2\2\2\u00ee\u00ef\7/\2\2\u00ef")
        buf.write(":\3\2\2\2\u00f0\u00f1\7>\2\2\u00f1\u00f2\7>\2\2\u00f2")
        buf.write("<\3\2\2\2\u00f3\u00f4\7@\2\2\u00f4\u00f5\7@\2\2\u00f5")
        buf.write(">\3\2\2\2\u00f6\u00f7\7(\2\2\u00f7@\3\2\2\2\u00f8\u00f9")
        buf.write("\7~\2\2\u00f9B\3\2\2\2\u00fa\u00fb\7`\2\2\u00fbD\3\2\2")
        buf.write("\2\u00fc\u00fd\7?\2\2\u00fd\u00fe\7?\2\2\u00feF\3\2\2")
        buf.write("\2\u00ff\u0100\7#\2\2\u0100\u0101\7?\2\2\u0101H\3\2\2")
        buf.write("\2\u0102\u0103\7>\2\2\u0103J\3\2\2\2\u0104\u0105\7>\2")
        buf.write("\2\u0105\u0106\7?\2\2\u0106L\3\2\2\2\u0107\u0108\7@\2")
        buf.write("\2\u0108N\3\2\2\2\u0109\u010a\7@\2\2\u010a\u010b\7?\2")
        buf.write("\2\u010bP\3\2\2\2\u010c\u010d\7(\2\2\u010d\u010e\7(\2")
        buf.write("\2\u010eR\3\2\2\2\u010f\u0110\7~\2\2\u0110\u0111\7~\2")
        buf.write("\2\u0111T\3\2\2\2\u0112\u0113\7#\2\2\u0113V\3\2\2\2\u0114")
        buf.write("\u0115\7\u0080\2\2\u0115X\3\2\2\2\u0116\u0117\7k\2\2\u0117")
        buf.write("\u0118\7:\2\2\u0118Z\3\2\2\2\u0119\u011a\7w\2\2\u011a")
        buf.write("\u011b\7:\2\2\u011b\\\3\2\2\2\u011c\u011d\7k\2\2\u011d")
        buf.write("\u011e\7\63\2\2\u011e\u011f\78\2\2\u011f^\3\2\2\2\u0120")
        buf.write("\u0121\7w\2\2\u0121\u0122\7\63\2\2\u0122\u0123\78\2\2")
        buf.write("\u0123`\3\2\2\2\u0124\u0125\7d\2\2\u0125\u0126\7q\2\2")
        buf.write("\u0126\u0127\7q\2\2\u0127\u0128\7n\2\2\u0128b\3\2\2\2")
        buf.write("\u0129\u012a\7h\2\2\u012a\u012b\7k\2\2\u012b\u012c\7z")
        buf.write("\2\2\u012c\u012d\7g\2\2\u012d\u012e\7f\2\2\u012ed\3\2")
        buf.write("\2\2\u012f\u0130\7]\2\2\u0130f\3\2\2\2\u0131\u0132\7_")
        buf.write("\2\2\u0132h\3\2\2\2\u0133\u0134\7C\2\2\u0134j\3\2\2\2")
        buf.write("\u0135\u0136\7D\2\2\u0136l\3\2\2\2\u0137\u0138\7E\2\2")
        buf.write("\u0138n\3\2\2\2\u0139\u013a\7F\2\2\u013ap\3\2\2\2\u013b")
        buf.write("\u013c\7G\2\2\u013cr\3\2\2\2\u013d\u013e\7J\2\2\u013e")
        buf.write("t\3\2\2\2\u013f\u0140\7N\2\2\u0140v\3\2\2\2\u0141\u0142")
        buf.write("\7D\2\2\u0142\u0143\7E\2\2\u0143x\3\2\2\2\u0144\u0145")
        buf.write("\7F\2\2\u0145\u0146\7G\2\2\u0146z\3\2\2\2\u0147\u0148")
        buf.write("\7J\2\2\u0148\u0149\7N\2\2\u0149|\3\2\2\2\u014a\u014b")
        buf.write("\7K\2\2\u014b\u014c\7Z\2\2\u014c~\3\2\2\2\u014d\u014e")
        buf.write("\7K\2\2\u014e\u014f\7[\2\2\u014f\u0080\3\2\2\2\u0150\u0154")
        buf.write("\t\2\2\2\u0151\u0153\t\3\2\2\u0152\u0151\3\2\2\2\u0153")
        buf.write("\u0156\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2")
        buf.write("\u0155\u0082\3\2\2\2\u0156\u0154\3\2\2\2\u0157\u0159\t")
        buf.write("\4\2\2\u0158\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u0158")
        buf.write("\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u016d\3\2\2\2\u015c")
        buf.write("\u015d\7\62\2\2\u015d\u015e\7d\2\2\u015e\u0160\3\2\2\2")
        buf.write("\u015f\u0161\t\5\2\2\u0160\u015f\3\2\2\2\u0161\u0162\3")
        buf.write("\2\2\2\u0162\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u016d")
        buf.write("\3\2\2\2\u0164\u0165\7\62\2\2\u0165\u0166\7z\2\2\u0166")
        buf.write("\u0168\3\2\2\2\u0167\u0169\t\6\2\2\u0168\u0167\3\2\2\2")
        buf.write("\u0169\u016a\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3")
        buf.write("\2\2\2\u016b\u016d\3\2\2\2\u016c\u0158\3\2\2\2\u016c\u015c")
        buf.write("\3\2\2\2\u016c\u0164\3\2\2\2\u016d\u0084\3\2\2\2\u016e")
        buf.write("\u0170\t\4\2\2\u016f\u016e\3\2\2\2\u0170\u0171\3\2\2\2")
        buf.write("\u0171\u016f\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0173\3")
        buf.write("\2\2\2\u0173\u0175\7\60\2\2\u0174\u0176\t\4\2\2\u0175")
        buf.write("\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0175\3\2\2\2")
        buf.write("\u0177\u0178\3\2\2\2\u0178\u0086\3\2\2\2\u0179\u017a\7")
        buf.write("v\2\2\u017a\u017b\7t\2\2\u017b\u017c\7w\2\2\u017c\u0183")
        buf.write("\7g\2\2\u017d\u017e\7h\2\2\u017e\u017f\7c\2\2\u017f\u0180")
        buf.write("\7n\2\2\u0180\u0181\7u\2\2\u0181\u0183\7g\2\2\u0182\u0179")
        buf.write("\3\2\2\2\u0182\u017d\3\2\2\2\u0183\u0088\3\2\2\2\u0184")
        buf.write("\u0186\t\7\2\2\u0185\u0184\3\2\2\2\u0186\u0187\3\2\2\2")
        buf.write("\u0187\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0189\3")
        buf.write("\2\2\2\u0189\u018a\bE\2\2\u018a\u008a\3\2\2\2\u018b\u018c")
        buf.write("\7\61\2\2\u018c\u018d\7\61\2\2\u018d\u0191\3\2\2\2\u018e")
        buf.write("\u0190\13\2\2\2\u018f\u018e\3\2\2\2\u0190\u0193\3\2\2")
        buf.write("\2\u0191\u0192\3\2\2\2\u0191\u018f\3\2\2\2\u0192\u0194")
        buf.write("\3\2\2\2\u0193\u0191\3\2\2\2\u0194\u0195\7\f\2\2\u0195")
        buf.write("\u0196\3\2\2\2\u0196\u0197\bF\2\2\u0197\u008c\3\2\2\2")
        buf.write("\u0198\u0199\7\61\2\2\u0199\u019a\7,\2\2\u019a\u019e\3")
        buf.write("\2\2\2\u019b\u019d\13\2\2\2\u019c\u019b\3\2\2\2\u019d")
        buf.write("\u01a0\3\2\2\2\u019e\u019f\3\2\2\2\u019e\u019c\3\2\2\2")
        buf.write("\u019f\u01a1\3\2\2\2\u01a0\u019e\3\2\2\2\u01a1\u01a2\7")
        buf.write(",\2\2\u01a2\u01a3\7\61\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5")
        buf.write("\bG\2\2\u01a5\u008e\3\2\2\2\u01a6\u01a7\7B\2\2\u01a7\u01ab")
        buf.write("\5\u0081A\2\u01a8\u01aa\13\2\2\2\u01a9\u01a8\3\2\2\2\u01aa")
        buf.write("\u01ad\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ab\u01a9\3\2\2\2")
        buf.write("\u01ac\u01ae\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ae\u01af\7")
        buf.write("\f\2\2\u01af\u01b0\3\2\2\2\u01b0\u01b1\bH\2\2\u01b1\u0090")
        buf.write("\3\2\2\2\17\2\u0154\u015a\u0162\u016a\u016c\u0171\u0177")
        buf.write("\u0182\u0187\u0191\u019e\u01ab\3\b\2\2")
        return buf.getvalue()


class ZOLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    T__60 = 61
    T__61 = 62
    T__62 = 63
    IDENTIFIER = 64
    INTEGER = 65
    FLOAT = 66
    BOOLEAN = 67
    WS = 68
    COMMENT = 69
    MULTILINE_COMMENT = 70
    META = 71

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'fun'", "'('", "')'", "'->'", "','", "':'", "'in'", "'struct'", 
            "'{'", "';'", "'}'", "'enum'", "'='", "'if'", "'else'", "'while'", 
            "'repeat'", "'for'", "'match'", "'_'", "'=>'", "'return'", "'asm'", 
            "'*'", "'/'", "'%'", "'+'", "'-'", "'<<'", "'>>'", "'&'", "'|'", 
            "'^'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", 
            "'||'", "'!'", "'~'", "'i8'", "'u8'", "'i16'", "'u16'", "'bool'", 
            "'fixed'", "'['", "']'", "'A'", "'B'", "'C'", "'D'", "'E'", 
            "'H'", "'L'", "'BC'", "'DE'", "'HL'", "'IX'", "'IY'" ]

    symbolicNames = [ "<INVALID>",
            "IDENTIFIER", "INTEGER", "FLOAT", "BOOLEAN", "WS", "COMMENT", 
            "MULTILINE_COMMENT", "META" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "T__59", "T__60", "T__61", 
                  "T__62", "IDENTIFIER", "INTEGER", "FLOAT", "BOOLEAN", 
                  "WS", "COMMENT", "MULTILINE_COMMENT", "META" ]

    grammarFileName = "ZOL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


